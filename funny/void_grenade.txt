# Spawns a void grenade. Does not work on servers with entity spawn delay limits, as it would be slow. Use wisely.

@name Void Grenade
@persist COUNT ENGAGE_DELAY
@persist F:entity R:number P:vector G:array

if (first()) {
    runOnTick(1)
    
    # How many grenades.
    COUNT = 100
    
    # How long to wait until combining grenades in milliseconds, if it fails raise this.
    ENGAGE_DELAY = 1000
    
    C = entity()
    C:propNotSolid(1)
    C:propDraw(0)
    
    P = C:pos() + vec(0, 0, 4)
    
    for (I = 1, COUNT) {
        concmd("gm_spawnsent npc_grenade_frag")
    }
    timer("pre", ENGAGE_DELAY)
}

if (clk("pre")) {
    findIncludePlayerProps(owner())
    findByClass("npc_grenade_frag")
    G = findToArray()
    
    foreach (I, K:entity = G) {
        K:propFreeze(1)
        if (I != 1) {
            K:setAlpha(0)
            K:propNotSolid(1)
        }
        K:setAng(ang(0))
        K:setPos(P)
    }
    
    timer("post", 1)
}

if (clk("post")) {
    F = G[1, entity]
    
    foreach (I, K:entity = G) {
        if (I != 1) { K:parentTo(F) }
        K:propFreeze(0)
    }

    F:setColor(vec(0, 0, 0))

    for (I = 1, holoMaxAmount()) {
        holoCreate(I)
        holoPos(I, P)
        holoEntity(I):soundPlay(I, 0, "synth/sine.wav")
        soundPitch(I, 6)
        soundVolume(I, 1)
        holoAlpha(I, 0)
        holoParent(I, F)
    }
    
    #G = array()
    R = 1
}

if (tickClk() && R) {
    if (F:pos() == vec()) { selfDestruct() }
}

# Made by Auralius.
# https://github.com/auralius-dev/expression2-public
